no_protections_packed_vmp6_localalloc_trace.txt
Total unique blocks:              53
                                                                                                             
Total unique blocks (distinct):   35
                                                     
                                                                                                             
# of unique blocks executed:   1537              
-------------------------------------------------------------------------------------------------------------

# of x86-64 instructions including junk: 19179                 
initial block count:   150                                
# of initial blocks executed:   4757              
                                                                                                             
                                                                                                             
-------------------------------------------------------------------------------------------------------------

UB ID: 0 - ['push 0x43daa329', 'call 0x7ff7a9d9ea2a']
UB ID: 1 - ['push r15', 'push rbp', 'push rcx', 'pushfq', 'push r11', 'push r9', 'push rsi', 'push rbx', 'push rax', 'push r13', 'push r8', 'push r12', 'push rdx', 'push r14', 'push rdi', 'push r10', 'movabs rcx, 0x7ff669c20000', 'push rcx', 'mov esi, dword ptr [rsp + 0x90]', 'rol esi, 1', 'neg esi', 'add esi, 0x304a4c0e', 'xor esi, 0x7a3f29b7', 'neg esi', 'add esi, 0x12ba16e3', 'lea rsi, [rsi + rcx]', 'movabs rbx, 0x100000000', 'add rsi, rbx', 'mov rbp, rsp', 'sub rsp, 0x180', 'and rsp, 0xfffffffffffffff0', 'lea r11, [rip + 0x22a9]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 2 - ['mov rdx, qword ptr [rbp]', 'add rbp, 8', 'movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov qword ptr [rsp + rcx], rdx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 3 - ['mov rdx, qword ptr [rbp]', 'add rbp, 8', 'movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov qword ptr [rsp + rcx], rdx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 4 - ['mov rdx, qword ptr [rbp]', 'add rbp, 8', 'movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov qword ptr [rsp + rcx], rdx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 5 - ['mov rdx, qword ptr [rbp]', 'add rbp, 8', 'movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov qword ptr [rsp + rcx], rdx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 6 - ['mov rdx, qword ptr [rbp]', 'add rbp, 8', 'movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov qword ptr [rsp + rcx], rdx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 7 - ['mov rdx, qword ptr [rsi]', 'add rsi, 8', 'sub rbp, 8', 'mov qword ptr [rbp], rdx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 8 - ['movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 9 - ['movzx r10d, byte ptr [rsi]', 'add rsi, 1', 'mov rbx, qword ptr [rsp + r10]', 'sub rbp, 8', 'mov qword ptr [rbp], rbx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 10 - ['mov rbx, qword ptr [rbp]', 'mov r10, qword ptr [rbp + 8]', 'add rbx, r10', 'mov qword ptr [rbp + 8], rbx', 'pushfq', 'pop qword ptr [rbp]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 11 - ['mov r9, rbp', 'sub rbp, 8', 'mov qword ptr [rbp], r9', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 12 - ['movzx r10d, byte ptr [rsi]', 'add rsi, 1', 'mov rbx, qword ptr [rsp + r10]', 'sub rbp, 8', 'mov qword ptr [rbp], rbx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 13 - ['movzx r10d, byte ptr [rsi]', 'add rsi, 1', 'mov rbx, qword ptr [rsp + r10]', 'sub rbp, 8', 'mov qword ptr [rbp], rbx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 14 - ['movzx r10d, byte ptr [rsi]', 'add rsi, 1', 'mov rbx, qword ptr [rsp + r10]', 'sub rbp, 8', 'mov qword ptr [rbp], rbx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 15 - ['mov rdx, qword ptr [rsi]', 'add rsi, 8', 'sub rbp, 8', 'mov qword ptr [rbp], rdx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 16 - ['mov rdx, qword ptr [rsi]', 'add rsi, 8', 'sub rbp, 8', 'mov qword ptr [rbp], rdx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 17 - ['mov rdx, qword ptr [rsi]', 'add rsi, 8', 'sub rbp, 8', 'mov qword ptr [rbp], rdx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 18 - ['mov rdi, qword ptr [rbp]', 'mov rax, qword ptr [rbp + 8]', 'not rdi', 'not rax', 'and rdi, rax', 'mov qword ptr [rbp + 8], rdi', 'pushfq', 'pop qword ptr [rbp]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 19 - ['mov r9, qword ptr [rbp]', 'mov rax, qword ptr ss:[r9]', 'mov qword ptr [rbp], rax', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 20 - ['mov r8, qword ptr [rbp]', 'mov r10, qword ptr [rbp + 8]', 'not r8', 'not r10', 'or r8, r10', 'mov qword ptr [rbp + 8], r8', 'pushfq', 'pop qword ptr [rbp]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 21 - ['mov rbp, qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 22 - ['mov r9, qword ptr [rbp]', 'mov rax, qword ptr ss:[r9]', 'mov qword ptr [rbp], rax', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 23 - ['mov r9, rsp', 'movabs rcx, 0x100', 'lea rbx, [rbp - 0x80]', 'and rbx, 0xfffffffffffffff0', 'sub rbx, rcx', 'mov rsp, rbx', 'push rsi', 'pushfq', 'mov rsi, r9', 'mov rdi, rbx', 'cld', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'popfq', 'pop rsi', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 24 - ['mov rcx, qword ptr [rbp]', 'add rbp, 8', 'mov rsi, rcx', 'lea r11, [rip + 0x22a9]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 25 - ['mov rbp, qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 26 - ['mov ebx, dword ptr [rsi]', 'add rsi, 4', 'sub rbp, 4', 'mov dword ptr [rbp], ebx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 27 - ['mov rdx, qword ptr [rbp]', 'mov eax, dword ptr [rbp + 8]', 'add rbp, 0xc', 'mov dword ptr [rdx], eax', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 28 - ['mov rcx, qword ptr [rbp]', 'mov edx, dword ptr [rcx]', 'add rbp, 4', 'mov dword ptr [rbp], edx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 29 - ['mov ebx, dword ptr [rbp]', 'add rbp, 4', 'movzx edx, byte ptr [rsi]', 'add rsi, 1', 'mov dword ptr [rsp + rdx], ebx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 30 - ['mov r9, qword ptr [rbp]', 'mov rax, qword ptr ss:[r9]', 'mov qword ptr [rbp], rax', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 31 - ['mov rbx, qword ptr [rbp]', 'mov r10, qword ptr [rbp + 8]', 'add rbp, 0x10', 'mov qword ptr ss:[rbx], r10', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 32 - ['movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov edx, dword ptr [rsp + rcx]', 'sub rbp, 4', 'mov dword ptr [rbp], edx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 33 - ['movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov edx, dword ptr [rsp + rcx]', 'sub rbp, 4', 'mov dword ptr [rbp], edx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 34 - ['mov r10d, dword ptr [rbp]', 'mov ebx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not r10d', 'not ebx', 'or r10d, ebx', 'mov dword ptr [rbp + 8], r10d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 35 - ['mov r8d, dword ptr [rbp]', 'mov edx, dword ptr [rbp + 4]', 'sub rbp, 4', 'add r8d, edx', 'mov dword ptr [rbp + 8], r8d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 36 - ['mov r9, qword ptr [rbp]', 'mov edx, dword ptr ss:[r9]', 'add rbp, 4', 'mov dword ptr [rbp], edx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 37 - ['mov r10d, dword ptr [rbp]', 'mov ebx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not r10d', 'not ebx', 'or r10d, ebx', 'mov dword ptr [rbp + 8], r10d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 38 - ['mov rdx, qword ptr [rbp]', 'mov rbx, qword ptr [rdx]', 'mov qword ptr [rbp], rbx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']
UB ID: 39 - ['movzx r9d, word ptr [rsi]', 'add rsi, 2', 'sub rbp, 2', 'mov word ptr [rbp], r9w', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 40 - ['mov r9, qword ptr [rbp]', 'mov cl, byte ptr [rbp + 8]', 'sub rbp, 6', 'shr r9, cl', 'mov qword ptr [rbp + 8], r9', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 41 - ['mov ebx, dword ptr [rbp]', 'mov ecx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not ebx', 'not ecx', 'and ebx, ecx', 'mov dword ptr [rbp + 8], ebx', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 42 - ['mov r10d, dword ptr [rbp]', 'mov ebx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not r10d', 'not ebx', 'or r10d, ebx', 'mov dword ptr [rbp + 8], r10d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 43 - ['mov r10d, dword ptr [rbp]', 'mov ebx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not r10d', 'not ebx', 'or r10d, ebx', 'mov dword ptr [rbp + 8], r10d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 44 - ['mov r10d, dword ptr [rbp]', 'mov ebx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not r10d', 'not ebx', 'or r10d, ebx', 'mov dword ptr [rbp + 8], r10d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']
UB ID: 45 - ['movzx eax, byte ptr [rsi]', 'add rsi, 1', 'push rsi', 'push r11', 'mov ebx, eax', 'mov edx, ebx', 'sub ecx, ecx', 'cmp ebx, 4', 'jbe 0x7ff7a9da0190']
UB ID: 46 - ['shl ecx, 3', 'shl edx, 3', 'mov rax, rbp', 'lea rax, [rax + rdx]', 'mov qword ptr [rbp - 8], rax', 'mov qword ptr [rbp - 0x10], rsp', 'sub rsp, rcx', 'and rsp, 0xfffffffffffffff0', 'lea rsp, [rsp + rcx]', 'test ebx, ebx', 'je 0x7ff7a9da096f']
UB ID: 47 - ['mov rax, qword ptr [rbp + rbx*8]', 'cmp ebx, 1', 'jne 0x7ff7a9d9c772']
UB ID: 48 - ['cmp ebx, 2', 'jne 0x7ff7a9d9d76d']
UB ID: 49 - ['mov rdx, rax', 'sub ebx, 1', 'jne 0x7ff7a9d9dc4f']
UB ID: 50 - ['mov rcx, rax', 'sub ebx, 1', 'jne 0x7ff7a9d9dc4f']
UB ID: 51 - ['mov rax, qword ptr [rbp]', 'sub rsp, 0x20', 'call rax']
UB ID: 52 - ['jmp qword ptr [rip + 0x68df9]']
0: UB addr = 7ff7a9d2996d with ID: 0 yields:
		push 0x43daa329
		call 0x7ff7a9d9ea2a
1: UB addr = 7ff7a9d9ea2a with ID: 1 yields:
		push r15
		push rbp
		push rcx
		pushfq
		push r11
		push r9
		push rsi
		push rbx
		push rax
		push r13
		push r8
		push r12
		push rdx
		push r14
		push rdi
		push r10
		movabs rcx, 0x7ff669c20000
		push rcx
		mov esi, dword ptr [rsp + 0x90]
		rol esi, 1
		neg esi
		add esi, 0x304a4c0e
		xor esi, 0x7a3f29b7
		neg esi
		add esi, 0x12ba16e3
		lea rsi, [rsi + rcx]
		movabs rbx, 0x100000000
		add rsi, rbx
		mov rbp, rsp
		sub rsp, 0x180
		and rsp, 0xfffffffffffffff0
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
2: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
3: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
4: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
5: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
6: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
7: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
8: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
9: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
10: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
11: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
12: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
13: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
14: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
15: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
16: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
17: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
18: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
19: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
20: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
21: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
22: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
23: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
24: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
25: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
26: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
27: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
28: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
29: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
30: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
31: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
32: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
33: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
34: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
35: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
36: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
37: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
38: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
39: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
40: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
41: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
42: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
43: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
44: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
45: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
46: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
47: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
48: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
49: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
50: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
51: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
52: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
53: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
54: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
55: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
56: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
57: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
58: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
59: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
60: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
61: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
62: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
63: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
64: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
65: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
66: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
67: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
68: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
69: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
70: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
71: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
72: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
73: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
74: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
75: UB addr = 7ff7a9d9d97c with ID: 19 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
76: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
77: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
78: UB addr = 7ff7a9d9e28a with ID: 21 yields:
		mov rbp, qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
79: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
80: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
81: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
82: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
83: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
84: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
85: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
86: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
87: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
88: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
89: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
90: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
91: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
92: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
93: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
94: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
95: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
96: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
97: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
98: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
99: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
100: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
101: UB addr = 7ff7a9d9d4cc with ID: 22 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
102: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
103: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
104: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
105: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
106: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
107: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
108: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
109: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
110: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
111: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
112: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
113: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
114: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
115: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
116: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
117: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
118: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
119: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
120: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
121: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
122: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
123: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
124: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
125: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
126: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
127: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
128: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
129: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
130: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
131: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
132: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
133: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
134: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
135: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
136: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
137: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
138: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
139: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
140: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
141: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
142: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
143: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
144: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
145: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
146: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
147: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
148: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
149: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
150: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
151: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
152: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
153: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
154: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
155: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
156: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
157: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
158: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
159: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
160: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
161: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
162: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
163: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
164: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
165: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
166: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
167: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
168: UB addr = 7ff7a9da0a24 with ID: 23 yields:
		mov r9, rsp
		movabs rcx, 0x100
		lea rbx, [rbp - 0x80]
		and rbx, 0xfffffffffffffff0
		sub rbx, rcx
		mov rsp, rbx
		push rsi
		pushfq
		mov rsi, r9
		mov rdi, rbx
		cld
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		popfq
		pop rsi
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
169: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
170: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
171: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
172: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
173: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
174: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
175: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
176: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
177: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
178: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
179: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
180: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
181: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
182: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
183: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
184: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
185: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
186: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
187: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
188: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
189: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
190: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
191: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
192: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
193: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
194: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
195: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
196: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
197: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
198: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
199: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
200: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
201: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
202: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
203: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
204: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
205: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
206: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
207: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
208: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
209: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
210: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
211: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
212: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
213: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
214: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
215: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
216: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
217: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
218: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
219: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
220: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
221: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
222: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
223: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
224: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
225: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
226: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
227: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
228: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
229: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
230: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
231: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
232: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
233: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
234: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
235: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
236: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
237: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
238: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
239: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
240: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
241: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
242: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
243: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
244: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
245: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
246: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
247: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
248: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
249: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
250: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
251: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
252: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
253: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
254: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
255: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
256: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
257: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
258: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
259: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
260: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
261: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
262: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
263: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
264: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
265: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
266: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
267: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
268: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
269: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
270: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
271: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
272: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
273: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
274: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
275: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
276: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
277: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
278: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
279: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
280: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
281: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
282: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
283: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
284: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
285: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
286: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
287: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
288: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
289: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
290: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
291: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
292: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
293: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
294: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
295: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
296: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
297: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
298: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
299: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
300: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
301: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
302: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
303: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
304: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
305: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
306: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
307: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
308: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
309: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
310: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
311: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
312: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
313: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
314: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
315: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
316: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
317: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
318: UB addr = 7ff7a9d9d4cc with ID: 22 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
319: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
320: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
321: UB addr = 7ff7a9d9e218 with ID: 25 yields:
		mov rbp, qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
322: UB addr = 7ff7a9da0a24 with ID: 23 yields:
		mov r9, rsp
		movabs rcx, 0x100
		lea rbx, [rbp - 0x80]
		and rbx, 0xfffffffffffffff0
		sub rbx, rcx
		mov rsp, rbx
		push rsi
		pushfq
		mov rsi, r9
		mov rdi, rbx
		cld
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		popfq
		pop rsi
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
323: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
324: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
325: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
326: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
327: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
328: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
329: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
330: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
331: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
332: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
333: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
334: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
335: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
336: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
337: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
338: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
339: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
340: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
341: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
342: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
343: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
344: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
345: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
346: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
347: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
348: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
349: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
350: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
351: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
352: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
353: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
354: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
355: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
356: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
357: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
358: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
359: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
360: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
361: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
362: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
363: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
364: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
365: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
366: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
367: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
368: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
369: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
370: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
371: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
372: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
373: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
374: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
375: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
376: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
377: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
378: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
379: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
380: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
381: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
382: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
383: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
384: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
385: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
386: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
387: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
388: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
389: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
390: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
391: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
392: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
393: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
394: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
395: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
396: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
397: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
398: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
399: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
400: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
401: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
402: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
403: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
404: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
405: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
406: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
407: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
408: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
409: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
410: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
411: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
412: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
413: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
414: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
415: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
416: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
417: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
418: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
419: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
420: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
421: UB addr = 7ff7a9da0a24 with ID: 23 yields:
		mov r9, rsp
		movabs rcx, 0x100
		lea rbx, [rbp - 0x80]
		and rbx, 0xfffffffffffffff0
		sub rbx, rcx
		mov rsp, rbx
		push rsi
		pushfq
		mov rsi, r9
		mov rdi, rbx
		cld
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		popfq
		pop rsi
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
422: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
423: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
424: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
425: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
426: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
427: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
428: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
429: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
430: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
431: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
432: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
433: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
434: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
435: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
436: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
437: UB addr = 7ff7a9da0a24 with ID: 23 yields:
		mov r9, rsp
		movabs rcx, 0x100
		lea rbx, [rbp - 0x80]
		and rbx, 0xfffffffffffffff0
		sub rbx, rcx
		mov rsp, rbx
		push rsi
		pushfq
		mov rsi, r9
		mov rdi, rbx
		cld
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		rep movsb byte ptr [rdi], byte ptr [rsi]
		popfq
		pop rsi
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
438: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
439: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
440: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
441: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
442: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
443: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
444: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
445: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
446: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
447: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
448: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
449: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
450: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
451: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
452: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
453: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
454: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
455: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
456: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
457: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
458: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
459: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
460: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
461: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
462: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
463: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
464: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
465: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
466: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
467: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
468: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
469: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
470: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
471: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
472: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
473: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
474: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
475: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
476: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
477: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
478: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
479: UB addr = 7ff7a9d9f131 with ID: 27 yields:
		mov rdx, qword ptr [rbp]
		mov eax, dword ptr [rbp + 8]
		add rbp, 0xc
		mov dword ptr [rdx], eax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
480: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
481: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
482: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
483: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
484: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
485: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
486: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
487: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
488: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
489: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
490: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
491: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
492: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
493: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
494: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
495: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
496: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
497: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
498: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
499: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
500: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
501: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
502: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
503: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
504: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
505: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
506: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
507: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
508: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
509: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
510: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
511: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
512: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
513: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
514: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
515: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
516: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
517: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
518: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
519: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
520: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
521: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
522: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
523: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
524: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
525: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
526: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
527: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
528: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
529: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
530: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
531: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
532: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
533: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
534: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
535: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
536: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
537: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
538: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
539: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
540: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
541: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
542: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
543: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
544: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
545: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
546: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
547: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
548: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
549: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
550: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
551: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
552: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
553: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
554: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
555: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
556: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
557: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
558: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
559: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
560: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
561: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
562: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
563: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
564: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
565: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
566: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
567: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
568: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
569: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
570: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
571: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
572: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
573: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
574: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
575: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
576: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
577: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
578: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
579: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
580: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
581: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
582: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
583: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
584: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
585: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
586: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
587: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
588: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
589: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
590: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
591: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
592: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
593: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
594: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
595: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
596: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
597: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
598: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
599: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
600: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
601: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
602: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
603: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
604: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
605: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
606: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
607: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
608: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
609: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
610: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
611: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
612: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
613: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
614: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
615: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
616: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
617: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
618: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
619: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
620: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
621: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
622: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
623: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
624: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
625: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
626: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
627: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
628: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
629: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
630: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
631: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
632: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
633: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
634: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
635: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
636: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
637: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
638: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
639: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
640: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
641: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
642: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
643: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
644: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
645: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
646: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
647: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
648: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
649: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
650: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
651: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
652: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
653: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
654: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
655: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
656: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
657: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
658: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
659: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
660: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
661: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
662: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
663: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
664: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
665: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
666: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
667: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
668: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
669: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
670: UB addr = 7ff7a9d9e5ce with ID: 28 yields:
		mov rcx, qword ptr [rbp]
		mov edx, dword ptr [rcx]
		add rbp, 4
		mov dword ptr [rbp], edx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
671: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
672: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
673: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
674: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
675: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
676: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
677: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
678: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
679: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
680: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
681: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
682: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
683: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
684: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
685: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
686: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
687: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
688: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
689: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
690: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
691: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
692: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
693: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
694: UB addr = 7ff7a9d9d4cc with ID: 22 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
695: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
696: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
697: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
698: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
699: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
700: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
701: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
702: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
703: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
704: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
705: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
706: UB addr = 7ff7a9d9e375 with ID: 30 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
707: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
708: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
709: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
710: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
711: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
712: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
713: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
714: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
715: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
716: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
717: UB addr = 7ff7a9d9d97c with ID: 19 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
718: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
719: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
720: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
721: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
722: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
723: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
724: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
725: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
726: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
727: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
728: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
729: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
730: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
731: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
732: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
733: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
734: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
735: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
736: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
737: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
738: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
739: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
740: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
741: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
742: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
743: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
744: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
745: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
746: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
747: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
748: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
749: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
750: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
751: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
752: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
753: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
754: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
755: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
756: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
757: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
758: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
759: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
760: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
761: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
762: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
763: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
764: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
765: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
766: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
767: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
768: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
769: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
770: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
771: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
772: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
773: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
774: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
775: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
776: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
777: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
778: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
779: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
780: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
781: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
782: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
783: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
784: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
785: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
786: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
787: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
788: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
789: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
790: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
791: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
792: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
793: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
794: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
795: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
796: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
797: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
798: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
799: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
800: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
801: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
802: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
803: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
804: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
805: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
806: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
807: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
808: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
809: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
810: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
811: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
812: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
813: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
814: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
815: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
816: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
817: UB addr = 7ff7a9d9e9c4 with ID: 31 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbp, 0x10
		mov qword ptr ss:[rbx], r10
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
818: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
819: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
820: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
821: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
822: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
823: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
824: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
825: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
826: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
827: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
828: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
829: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
830: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
831: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
832: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
833: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
834: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
835: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
836: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
837: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
838: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
839: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
840: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
841: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
842: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
843: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
844: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
845: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
846: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
847: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
848: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
849: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
850: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
851: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
852: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
853: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
854: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
855: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
856: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
857: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
858: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
859: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
860: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
861: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
862: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
863: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
864: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
865: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
866: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
867: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
868: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
869: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
870: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
871: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
872: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
873: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
874: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
875: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
876: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
877: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
878: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
879: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
880: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
881: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
882: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
883: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
884: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
885: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
886: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
887: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
888: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
889: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
890: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
891: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
892: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
893: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
894: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
895: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
896: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
897: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
898: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
899: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
900: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
901: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
902: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
903: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
904: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
905: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
906: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
907: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
908: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
909: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
910: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
911: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
912: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
913: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
914: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
915: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
916: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
917: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
918: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
919: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
920: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
921: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
922: UB addr = 7ff7a9d9e5ce with ID: 28 yields:
		mov rcx, qword ptr [rbp]
		mov edx, dword ptr [rcx]
		add rbp, 4
		mov dword ptr [rbp], edx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
923: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
924: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
925: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
926: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
927: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
928: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
929: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
930: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
931: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
932: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
933: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
934: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
935: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
936: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
937: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
938: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
939: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
940: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
941: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
942: UB addr = 7ff7a9d9d4cc with ID: 22 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
943: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
944: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
945: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
946: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
947: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
948: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
949: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
950: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
951: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
952: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
953: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
954: UB addr = 7ff7a9d9e375 with ID: 30 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
955: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
956: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
957: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
958: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
959: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
960: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
961: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
962: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
963: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
964: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
965: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
966: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
967: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
968: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
969: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
970: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
971: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
972: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
973: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
974: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
975: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
976: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
977: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
978: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
979: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
980: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
981: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
982: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
983: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
984: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
985: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
986: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
987: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
988: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
989: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
990: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
991: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
992: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
993: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
994: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
995: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
996: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
997: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
998: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
999: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1000: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1001: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1002: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1003: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1004: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1005: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1006: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1007: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1008: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1009: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1010: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1011: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1012: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1013: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1014: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1015: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1016: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1017: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1018: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1019: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1020: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1021: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1022: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1023: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1024: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1025: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1026: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1027: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1028: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1029: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1030: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1031: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1032: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1033: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1034: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1035: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1036: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1037: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1038: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1039: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1040: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1041: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1042: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1043: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1044: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1045: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1046: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1047: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1048: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1049: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1050: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1051: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1052: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1053: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1054: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1055: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1056: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1057: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1058: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1059: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1060: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1061: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1062: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1063: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1064: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1065: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1066: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1067: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1068: UB addr = 7ff7a9d9d4cc with ID: 22 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1069: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1070: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1071: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1072: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1073: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1074: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1075: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1076: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1077: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1078: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1079: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1080: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1081: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1082: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1083: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1084: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1085: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1086: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1087: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1088: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1089: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1090: UB addr = 7ff7a9d9e375 with ID: 30 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1091: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1092: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1093: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1094: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1095: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1096: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1097: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1098: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1099: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1100: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1101: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1102: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1103: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1104: UB addr = 7ff7a9d9e9c4 with ID: 31 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbp, 0x10
		mov qword ptr ss:[rbx], r10
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1105: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1106: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1107: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1108: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1109: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1110: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1111: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1112: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1113: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1114: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1115: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1116: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1117: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1118: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1119: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1120: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1121: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1122: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1123: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1124: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1125: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1126: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1127: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1128: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1129: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1130: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1131: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1132: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1133: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1134: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1135: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1136: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1137: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1138: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1139: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1140: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1141: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1142: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1143: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1144: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1145: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1146: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1147: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1148: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1149: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1150: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1151: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1152: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1153: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1154: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1155: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1156: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1157: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1158: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1159: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1160: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1161: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1162: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1163: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1164: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1165: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1166: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1167: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1168: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1169: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1170: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1171: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1172: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1173: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1174: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1175: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1176: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1177: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1178: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1179: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1180: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1181: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1182: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1183: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1184: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1185: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1186: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1187: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1188: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1189: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1190: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1191: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1192: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1193: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1194: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1195: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1196: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1197: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1198: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1199: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1200: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1201: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1202: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1203: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1204: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1205: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1206: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1207: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1208: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1209: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1210: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1211: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1212: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1213: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1214: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1215: UB addr = 7ff7a9d9e5ce with ID: 28 yields:
		mov rcx, qword ptr [rbp]
		mov edx, dword ptr [rcx]
		add rbp, 4
		mov dword ptr [rbp], edx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1216: UB addr = 7ff7a9d9e0fb with ID: 32 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1217: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1218: UB addr = 7ff7a9d9d5f8 with ID: 33 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1219: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1220: UB addr = 7ff7a9d9c7ed with ID: 34 yields:
		mov r10d, dword ptr [rbp]
		mov ebx, dword ptr [rbp + 4]
		sub rbp, 4
		not r10d
		not ebx
		or r10d, ebx
		mov dword ptr [rbp + 8], r10d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1221: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1222: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1223: UB addr = 7ff7a9d9dbcf with ID: 35 yields:
		mov r8d, dword ptr [rbp]
		mov edx, dword ptr [rbp + 4]
		sub rbp, 4
		add r8d, edx
		mov dword ptr [rbp + 8], r8d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1224: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1225: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1226: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1227: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1228: UB addr = 7ff7a9d9d598 with ID: 36 yields:
		mov r9, qword ptr [rbp]
		mov edx, dword ptr ss:[r9]
		add rbp, 4
		mov dword ptr [rbp], edx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1229: UB addr = 7ff7a9d9d1f6 with ID: 37 yields:
		mov r10d, dword ptr [rbp]
		mov ebx, dword ptr [rbp + 4]
		sub rbp, 4
		not r10d
		not ebx
		or r10d, ebx
		mov dword ptr [rbp + 8], r10d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1230: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1231: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1232: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1233: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1234: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1235: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1236: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1237: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1238: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1239: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1240: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1241: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1242: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1243: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1244: UB addr = 7ff7a9d9d97c with ID: 19 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1245: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1246: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1247: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1248: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1249: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1250: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1251: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1252: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1253: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1254: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1255: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1256: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1257: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1258: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1259: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1260: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1261: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1262: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1263: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1264: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1265: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1266: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1267: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1268: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1269: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1270: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1271: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1272: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1273: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1274: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1275: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1276: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1277: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1278: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1279: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1280: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1281: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1282: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1283: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1284: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1285: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1286: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1287: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1288: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1289: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1290: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1291: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1292: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1293: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1294: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1295: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1296: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1297: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1298: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1299: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1300: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1301: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1302: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1303: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1304: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1305: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1306: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1307: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1308: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1309: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1310: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1311: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1312: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1313: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1314: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1315: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1316: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1317: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1318: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1319: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1320: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1321: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1322: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1323: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1324: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1325: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1326: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1327: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1328: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1329: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1330: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1331: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1332: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1333: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1334: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1335: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1336: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1337: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1338: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1339: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1340: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1341: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1342: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1343: UB addr = 7ff7a9d9d5f8 with ID: 33 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1344: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1345: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1346: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1347: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1348: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1349: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1350: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1351: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1352: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1353: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1354: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1355: UB addr = 7ff7a9d9d4a3 with ID: 38 yields:
		mov rdx, qword ptr [rbp]
		mov rbx, qword ptr [rdx]
		mov qword ptr [rbp], rbx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1356: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1357: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1358: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1359: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1360: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1361: UB addr = 7ff7a9d9dbb0 with ID: 20 yields:
		mov r8, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		not r8
		not r10
		or r8, r10
		mov qword ptr [rbp + 8], r8
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1362: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1363: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1364: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1365: UB addr = 7ff7a9d9e375 with ID: 30 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1366: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1367: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1368: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1369: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1370: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1371: UB addr = 7ff7a9d9daae with ID: 16 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1372: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1373: UB addr = 7ff7a9d9e70f with ID: 11 yields:
		mov r9, rbp
		sub rbp, 8
		mov qword ptr [rbp], r9
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1374: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1375: UB addr = 7ff7a9d9dfb2 with ID: 39 yields:
		movzx r9d, word ptr [rsi]
		add rsi, 2
		sub rbp, 2
		mov word ptr [rbp], r9w
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1376: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1377: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1378: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1379: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1380: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1381: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1382: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1383: UB addr = 7ff7a9d9d440 with ID: 7 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1384: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1385: UB addr = 7ff7a9d9d04c with ID: 18 yields:
		mov rdi, qword ptr [rbp]
		mov rax, qword ptr [rbp + 8]
		not rdi
		not rax
		and rdi, rax
		mov qword ptr [rbp + 8], rdi
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1386: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1387: UB addr = 7ff7a9d9e8fe with ID: 40 yields:
		mov r9, qword ptr [rbp]
		mov cl, byte ptr [rbp + 8]
		sub rbp, 6
		shr r9, cl
		mov qword ptr [rbp + 8], r9
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1388: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1389: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1390: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1391: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1392: UB addr = 7ff7a9d9d97c with ID: 19 yields:
		mov r9, qword ptr [rbp]
		mov rax, qword ptr ss:[r9]
		mov qword ptr [rbp], rax
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1393: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1394: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1395: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1396: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1397: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1398: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1399: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1400: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1401: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1402: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1403: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1404: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1405: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1406: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1407: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1408: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1409: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1410: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1411: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1412: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1413: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1414: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1415: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1416: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1417: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1418: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1419: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1420: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1421: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1422: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1423: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1424: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1425: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1426: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1427: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1428: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1429: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1430: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1431: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1432: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1433: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1434: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1435: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1436: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1437: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1438: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1439: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1440: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1441: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1442: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1443: UB addr = 7ff7a9da0826 with ID: 24 yields:
		mov rcx, qword ptr [rbp]
		add rbp, 8
		mov rsi, rcx
		lea r11, [rip + 0x22a9]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1444: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1445: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1446: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1447: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1448: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1449: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1450: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1451: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1452: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1453: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1454: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1455: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1456: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1457: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1458: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1459: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1460: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1461: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1462: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1463: UB addr = 7ff7a9d9fe8a with ID: 17 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1464: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1465: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1466: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1467: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1468: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1469: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1470: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1471: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1472: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1473: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1474: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1475: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1476: UB addr = 7ff7a9d9d5f8 with ID: 33 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1477: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1478: UB addr = 7ff7a9d9e0fb with ID: 32 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1479: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1480: UB addr = 7ff7a9d9f00b with ID: 41 yields:
		mov ebx, dword ptr [rbp]
		mov ecx, dword ptr [rbp + 4]
		sub rbp, 4
		not ebx
		not ecx
		and ebx, ecx
		mov dword ptr [rbp + 8], ebx
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1481: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1482: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1483: UB addr = 7ff7a9d9d5f8 with ID: 33 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1484: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1485: UB addr = 7ff7a9d9d1f6 with ID: 37 yields:
		mov r10d, dword ptr [rbp]
		mov ebx, dword ptr [rbp + 4]
		sub rbp, 4
		not r10d
		not ebx
		or r10d, ebx
		mov dword ptr [rbp + 8], r10d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1486: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1487: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1488: UB addr = 7ff7a9d9e0fb with ID: 32 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1489: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1490: UB addr = 7ff7a9d9d5f8 with ID: 33 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1491: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1492: UB addr = 7ff7a9d9e0fb with ID: 32 yields:
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov edx, dword ptr [rsp + rcx]
		sub rbp, 4
		mov dword ptr [rbp], edx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1493: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1494: UB addr = 7ff7a9da0627 with ID: 42 yields:
		mov r10d, dword ptr [rbp]
		mov ebx, dword ptr [rbp + 4]
		sub rbp, 4
		not r10d
		not ebx
		or r10d, ebx
		mov dword ptr [rbp + 8], r10d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1495: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1496: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1497: UB addr = 7ff7a9d9fe57 with ID: 43 yields:
		mov r10d, dword ptr [rbp]
		mov ebx, dword ptr [rbp + 4]
		sub rbp, 4
		not r10d
		not ebx
		or r10d, ebx
		mov dword ptr [rbp + 8], r10d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1498: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1499: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1500: UB addr = 7ff7a9d9d0ad with ID: 44 yields:
		mov r10d, dword ptr [rbp]
		mov ebx, dword ptr [rbp + 4]
		sub rbp, 4
		not r10d
		not ebx
		or r10d, ebx
		mov dword ptr [rbp + 8], r10d
		pushfq
		pop qword ptr [rbp]
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1501: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1502: UB addr = 7ff7a9d9dd33 with ID: 3 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1503: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1504: UB addr = 7ff7a9d9d40e with ID: 26 yields:
		mov ebx, dword ptr [rsi]
		add rsi, 4
		sub rbp, 4
		mov dword ptr [rbp], ebx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1505: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1506: UB addr = 7ff7a9d9d5b9 with ID: 29 yields:
		mov ebx, dword ptr [rbp]
		add rbp, 4
		movzx edx, byte ptr [rsi]
		add rsi, 1
		mov dword ptr [rsp + rdx], ebx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1507: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1508: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1509: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1510: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1511: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1512: UB addr = 7ff7a9da06e3 with ID: 4 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1513: UB addr = 7ff7a9d9d4a3 with ID: 38 yields:
		mov rdx, qword ptr [rbp]
		mov rbx, qword ptr [rdx]
		mov qword ptr [rbp], rbx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1514: UB addr = 7ff7a9da05a8 with ID: 5 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1515: UB addr = 7ff7a9d9e4d6 with ID: 15 yields:
		mov rdx, qword ptr [rsi]
		add rsi, 8
		sub rbp, 8
		mov qword ptr [rbp], rdx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1516: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1517: UB addr = 7ff7a9d9fba7 with ID: 14 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1518: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1519: UB addr = 7ff7a9d9c86b with ID: 10 yields:
		mov rbx, qword ptr [rbp]
		mov r10, qword ptr [rbp + 8]
		add rbx, r10
		mov qword ptr [rbp + 8], rbx
		pushfq
		pop qword ptr [rbp]
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1520: UB addr = 7ff7a9d9e058 with ID: 6 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1521: UB addr = 7ff7a9d9e12a with ID: 2 yields:
		mov rdx, qword ptr [rbp]
		add rbp, 8
		movzx ecx, byte ptr [rsi]
		add rsi, 1
		mov qword ptr [rsp + rcx], rdx
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1522: UB addr = 7ff7a9da011e with ID: 9 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1523: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1524: UB addr = 7ff7a9d9ea74 with ID: 12 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1525: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1526: UB addr = 7ff7a9d9d459 with ID: 13 yields:
		movzx r10d, byte ptr [rsi]
		add rsi, 1
		mov rbx, qword ptr [rsp + r10]
		sub rbp, 8
		mov qword ptr [rbp], rbx
		lea rdx, [rsp + 0x140]
		cmp rbp, rdx
		ja 0x7ff7a9d9cef2
1527: UB addr = 7ff7a9d9cef2 with ID: 8 yields:
		movzx r8d, byte ptr [rsi]
		add rsi, 1
		push qword ptr [r11 + r8*8]
		ret
1528: UB addr = 7ff7a9d9f03a with ID: 45 yields:
		movzx eax, byte ptr [rsi]
		add rsi, 1
		push rsi
		push r11
		mov ebx, eax
		mov edx, ebx
		sub ecx, ecx
		cmp ebx, 4
		jbe 0x7ff7a9da0190
1529: UB addr = 7ff7a9da0190 with ID: 46 yields:
		shl ecx, 3
		shl edx, 3
		mov rax, rbp
		lea rax, [rax + rdx]
		mov qword ptr [rbp - 8], rax
		mov qword ptr [rbp - 0x10], rsp
		sub rsp, rcx
		and rsp, 0xfffffffffffffff0
		lea rsp, [rsp + rcx]
		test ebx, ebx
		je 0x7ff7a9da096f
1530: UB addr = 7ff7a9d9dc4f with ID: 47 yields:
		mov rax, qword ptr [rbp + rbx*8]
		cmp ebx, 1
		jne 0x7ff7a9d9c772
1531: UB addr = 7ff7a9d9c772 with ID: 48 yields:
		cmp ebx, 2
		jne 0x7ff7a9d9d76d
1532: UB addr = 7ff7a9d9fcee with ID: 49 yields:
		mov rdx, rax
		sub ebx, 1
		jne 0x7ff7a9d9dc4f
1533: UB addr = 7ff7a9d9dc4f with ID: 47 yields:
		mov rax, qword ptr [rbp + rbx*8]
		cmp ebx, 1
		jne 0x7ff7a9d9c772
1534: UB addr = 7ff7a9d9d8c2 with ID: 50 yields:
		mov rcx, rax
		sub ebx, 1
		jne 0x7ff7a9d9dc4f
1535: UB addr = 7ff7a9da096f with ID: 51 yields:
		mov rax, qword ptr [rbp]
		sub rsp, 0x20
		call rax
1536: UB addr = 7fff6b818c50 with ID: 52 yields:
		jmp qword ptr [rip + 0x68df9]
distinct # of ublocks: 35
block IDs [duplicates]: [0]
['push 0x43daa329', 'call 0x7ff7a9d9ea2a']

bytes: push 0x43daa329: 6829a3da43
call 0x7ff7a9d9ea2a: e8b3500700

bytecode len: 20 -   6829a3da43e8b3500700

block IDs [duplicates]: [1]
['push r15', 'push rbp', 'push rcx', 'pushfq', 'push r11', 'push r9', 'push rsi', 'push rbx', 'push rax', 'push r13', 'push r8', 'push r12', 'push rdx', 'push r14', 'push rdi', 'push r10', 'movabs rcx, 0x7ff669c20000', 'push rcx', 'mov esi, dword ptr [rsp + 0x90]', 'rol esi, 1', 'neg esi', 'add esi, 0x304a4c0e', 'xor esi, 0x7a3f29b7', 'neg esi', 'add esi, 0x12ba16e3', 'lea rsi, [rsi + rcx]', 'movabs rbx, 0x100000000', 'add rsi, rbx', 'mov rbp, rsp', 'sub rsp, 0x180', 'and rsp, 0xfffffffffffffff0', 'lea r11, [rip + 0x22a9]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: push r15: 4157
push rbp: 55
push rcx: 51
pushfq: 9c
push r11: 4153
push r9: 4151
push rsi: 56
push rbx: 53
push rax: 50
push r13: 4155
push r8: 4150
push r12: 4154
push rdx: 52
push r14: 4156
push rdi: 57
push r10: 4152
movabs rcx, 0x7ff669c20000: 48b90000c269f67f0000
push rcx: 51
mov esi, dword ptr [rsp + 0x90]: 8bb42490000000
rol esi, 1: d1c6
neg esi: f7de
add esi, 0x304a4c0e: 81c60e4c4a30
xor esi, 0x7a3f29b7: 81f6b7293f7a
neg esi: f7de
add esi, 0x12ba16e3: 81c6e316ba12
lea rsi, [rsi + rcx]: 488d340e
movabs rbx, 0x100000000: 48bb0000000001000000
add rsi, rbx: 4803f3
mov rbp, rsp: 488bec
sub rsp, 0x180: 4881ec80010000
and rsp, 0xfffffffffffffff0: 4881e4f0ffffff
lea r11, [rip + 0x22a9]: 4c8d1da9220000
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 246 -   415755519c4153415156535041554150415452415657415248b90000c269f67f0000518bb42490000000d1c6f7de81c60e4c4a3081f6b7293f7af7de81c6e316ba12488d340e48bb00000000010000004803f3488bec4881ec800100004881e4f0ffffff4c8d1da9220000440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [2, 3, 4, 5, 6]
['mov rdx, qword ptr [rbp]', 'add rbp, 8', 'movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov qword ptr [rsp + rcx], rdx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rdx, qword ptr [rbp]: 488b542500
add rbp, 8: 4881c508000000
movzx ecx, byte ptr [rsi]: 0fb60e
add rsi, 1: 4881c601000000
mov qword ptr [rsp + rcx], rdx: 4889140c
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 84 -   488b5425004881c5080000000fb60e4881c6010000004889140c440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [7, 15, 16, 17]
['mov rdx, qword ptr [rsi]', 'add rsi, 8', 'sub rbp, 8', 'mov qword ptr [rbp], rdx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov rdx, qword ptr [rsi]: 488b16
add rsi, 8: 4881c608000000
sub rbp, 8: 4881ed08000000
mov qword ptr [rbp], rdx: 4889542500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 78 -   488b164881c6080000004881ed080000004889542500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [8]
['movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 32 -   440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [9, 12, 13, 14]
['movzx r10d, byte ptr [rsi]', 'add rsi, 1', 'mov rbx, qword ptr [rsp + r10]', 'sub rbp, 8', 'mov qword ptr [rbp], rbx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: movzx r10d, byte ptr [rsi]: 440fb616
add rsi, 1: 4881c601000000
mov rbx, qword ptr [rsp + r10]: 4a8b1c14
sub rbp, 8: 4881ed08000000
mov qword ptr [rbp], rbx: 48895c2500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 88 -   440fb6164881c6010000004a8b1c144881ed0800000048895c2500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [10]
['mov rbx, qword ptr [rbp]', 'mov r10, qword ptr [rbp + 8]', 'add rbx, r10', 'mov qword ptr [rbp + 8], rbx', 'pushfq', 'pop qword ptr [rbp]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rbx, qword ptr [rbp]: 488b5c2500
mov r10, qword ptr [rbp + 8]: 4c8b5508
add rbx, r10: 4903da
mov qword ptr [rbp + 8], rbx: 48895d08
pushfq: 9c
pop qword ptr [rbp]: 8f442500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 74 -   488b5c25004c8b55084903da48895d089c8f442500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [11]
['mov r9, rbp', 'sub rbp, 8', 'mov qword ptr [rbp], r9', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov r9, rbp: 4c8bcd
sub rbp, 8: 4881ed08000000
mov qword ptr [rbp], r9: 4c894c2500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 64 -   4c8bcd4881ed080000004c894c2500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [18]
['mov rdi, qword ptr [rbp]', 'mov rax, qword ptr [rbp + 8]', 'not rdi', 'not rax', 'and rdi, rax', 'mov qword ptr [rbp + 8], rdi', 'pushfq', 'pop qword ptr [rbp]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rdi, qword ptr [rbp]: 488b7c2500
mov rax, qword ptr [rbp + 8]: 488b4508
not rdi: 48f7d7
not rax: 48f7d0
and rdi, rax: 4823f8
mov qword ptr [rbp + 8], rdi: 48897d08
pushfq: 9c
pop qword ptr [rbp]: 8f442500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 86 -   488b7c2500488b450848f7d748f7d04823f848897d089c8f442500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [19, 22, 30]
['mov r9, qword ptr [rbp]', 'mov rax, qword ptr ss:[r9]', 'mov qword ptr [rbp], rax', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov r9, qword ptr [rbp]: 4c8b4c2500
mov rax, qword ptr ss:[r9]: 36498b01
mov qword ptr [rbp], rax: 4889442500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 60 -   4c8b4c250036498b014889442500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [20]
['mov r8, qword ptr [rbp]', 'mov r10, qword ptr [rbp + 8]', 'not r8', 'not r10', 'or r8, r10', 'mov qword ptr [rbp + 8], r8', 'pushfq', 'pop qword ptr [rbp]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov r8, qword ptr [rbp]: 4c8b442500
mov r10, qword ptr [rbp + 8]: 4c8b5508
not r8: 49f7d0
not r10: 49f7d2
or r8, r10: 4d0bc2
mov qword ptr [rbp + 8], r8: 4c894508
pushfq: 9c
pop qword ptr [rbp]: 8f442500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 86 -   4c8b4425004c8b550849f7d049f7d24d0bc24c8945089c8f442500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [21, 25, 21]
['mov rbp, qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov rbp, qword ptr [rbp]: 488b6c2500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 44 -   488b6c2500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [23]
['mov r9, rsp', 'movabs rcx, 0x100', 'lea rbx, [rbp - 0x80]', 'and rbx, 0xfffffffffffffff0', 'sub rbx, rcx', 'mov rsp, rbx', 'push rsi', 'pushfq', 'mov rsi, r9', 'mov rdi, rbx', 'cld', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'rep movsb byte ptr [rdi], byte ptr [rsi]', 'popfq', 'pop rsi', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov r9, rsp: 4c8bcc
movabs rcx, 0x100: 48b90001000000000000
lea rbx, [rbp - 0x80]: 488d5c2580
and rbx, 0xfffffffffffffff0: 4881e3f0ffffff
sub rbx, rcx: 482bd9
mov rsp, rbx: 488be3
push rsi: 56
pushfq: 9c
mov rsi, r9: 498bf1
mov rdi, rbx: 488bfb
cld: fc
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
rep movsb byte ptr [rdi], byte ptr [rsi]: f3a4
popfq: 9d
pop rsi: 5e
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 1140 -   4c8bcc48b90001000000000000488d5c25804881e3f0ffffff482bd9488be3569c498bf1488bfbfcf3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a4f3a49d5e440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [24]
['mov rcx, qword ptr [rbp]', 'add rbp, 8', 'mov rsi, rcx', 'lea r11, [rip + 0x22a9]', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rcx, qword ptr [rbp]: 488b4c2500
add rbp, 8: 4881c508000000
mov rsi, rcx: 488bf1
lea r11, [rip + 0x22a9]: 4c8d1da9220000
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 76 -   488b4c25004881c508000000488bf14c8d1da9220000440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [26]
['mov ebx, dword ptr [rsi]', 'add rsi, 4', 'sub rbp, 4', 'mov dword ptr [rbp], ebx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov ebx, dword ptr [rsi]: 8b1e
add rsi, 4: 4881c604000000
sub rbp, 4: 4881ed04000000
mov dword ptr [rbp], ebx: 895c2500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 74 -   8b1e4881c6040000004881ed04000000895c2500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [27]
['mov rdx, qword ptr [rbp]', 'mov eax, dword ptr [rbp + 8]', 'add rbp, 0xc', 'mov dword ptr [rdx], eax', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rdx, qword ptr [rbp]: 488b542500
mov eax, dword ptr [rbp + 8]: 8b4508
add rbp, 0xc: 4881c50c000000
mov dword ptr [rdx], eax: 8902
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 66 -   488b5425008b45084881c50c0000008902440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [28]
['mov rcx, qword ptr [rbp]', 'mov edx, dword ptr [rcx]', 'add rbp, 4', 'mov dword ptr [rbp], edx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rcx, qword ptr [rbp]: 488b4c2500
mov edx, dword ptr [rcx]: 8b11
add rbp, 4: 4881c504000000
mov dword ptr [rbp], edx: 89542500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 68 -   488b4c25008b114881c50400000089542500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [29]
['mov ebx, dword ptr [rbp]', 'add rbp, 4', 'movzx edx, byte ptr [rsi]', 'add rsi, 1', 'mov dword ptr [rsp + rdx], ebx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov ebx, dword ptr [rbp]: 8b5c2500
add rbp, 4: 4881c504000000
movzx edx, byte ptr [rsi]: 0fb616
add rsi, 1: 4881c601000000
mov dword ptr [rsp + rdx], ebx: 891c14
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 80 -   8b5c25004881c5040000000fb6164881c601000000891c14440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [31]
['mov rbx, qword ptr [rbp]', 'mov r10, qword ptr [rbp + 8]', 'add rbp, 0x10', 'mov qword ptr ss:[rbx], r10', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rbx, qword ptr [rbp]: 488b5c2500
mov r10, qword ptr [rbp + 8]: 4c8b5508
add rbp, 0x10: 4881c510000000
mov qword ptr ss:[rbx], r10: 364c8913
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 72 -   488b5c25004c8b55084881c510000000364c8913440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [32, 33]
['movzx ecx, byte ptr [rsi]', 'add rsi, 1', 'mov edx, dword ptr [rsp + rcx]', 'sub rbp, 4', 'mov dword ptr [rbp], edx', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: movzx ecx, byte ptr [rsi]: 0fb60e
add rsi, 1: 4881c601000000
mov edx, dword ptr [rsp + rcx]: 8b140c
sub rbp, 4: 4881ed04000000
mov dword ptr [rbp], edx: 89542500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 82 -   0fb60e4881c6010000008b140c4881ed0400000089542500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [34, 37, 42, 43, 44]
['mov r10d, dword ptr [rbp]', 'mov ebx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not r10d', 'not ebx', 'or r10d, ebx', 'mov dword ptr [rbp + 8], r10d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov r10d, dword ptr [rbp]: 448b542500
mov ebx, dword ptr [rbp + 4]: 8b5d04
sub rbp, 4: 4881ed04000000
not r10d: 41f7d2
not ebx: f7d3
or r10d, ebx: 440bd3
mov dword ptr [rbp + 8], r10d: 44895508
pushfq: 9c
pop qword ptr [rbp]: 8f442500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 98 -   448b5425008b5d044881ed0400000041f7d2f7d3440bd3448955089c8f442500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [35]
['mov r8d, dword ptr [rbp]', 'mov edx, dword ptr [rbp + 4]', 'sub rbp, 4', 'add r8d, edx', 'mov dword ptr [rbp + 8], r8d', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov r8d, dword ptr [rbp]: 448b442500
mov edx, dword ptr [rbp + 4]: 8b5504
sub rbp, 4: 4881ed04000000
add r8d, edx: 4403c2
mov dword ptr [rbp + 8], r8d: 44894508
pushfq: 9c
pop qword ptr [rbp]: 8f442500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 88 -   448b4425008b55044881ed040000004403c2448945089c8f442500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [36]
['mov r9, qword ptr [rbp]', 'mov edx, dword ptr ss:[r9]', 'add rbp, 4', 'mov dword ptr [rbp], edx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov r9, qword ptr [rbp]: 4c8b4c2500
mov edx, dword ptr ss:[r9]: 36418b11
add rbp, 4: 4881c504000000
mov dword ptr [rbp], edx: 89542500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 72 -   4c8b4c250036418b114881c50400000089542500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [38]
['mov rdx, qword ptr [rbp]', 'mov rbx, qword ptr [rdx]', 'mov qword ptr [rbp], rbx', 'movzx r8d, byte ptr [rsi]', 'add rsi, 1', 'push qword ptr [r11 + r8*8]', 'ret']

bytes: mov rdx, qword ptr [rbp]: 488b542500
mov rbx, qword ptr [rdx]: 488b1a
mov qword ptr [rbp], rbx: 48895c2500
movzx r8d, byte ptr [rsi]: 440fb606
add rsi, 1: 4881c601000000
push qword ptr [r11 + r8*8]: 43ff34c3
ret: c3

bytecode len: 58 -   488b542500488b1a48895c2500440fb6064881c60100000043ff34c3c3

block IDs [duplicates]: [39]
['movzx r9d, word ptr [rsi]', 'add rsi, 2', 'sub rbp, 2', 'mov word ptr [rbp], r9w', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: movzx r9d, word ptr [rsi]: 440fb70e
add rsi, 2: 4881c602000000
sub rbp, 2: 4881ed02000000
mov word ptr [rbp], r9w: 6644894c2500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 82 -   440fb70e4881c6020000004881ed020000006644894c2500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [40]
['mov r9, qword ptr [rbp]', 'mov cl, byte ptr [rbp + 8]', 'sub rbp, 6', 'shr r9, cl', 'mov qword ptr [rbp + 8], r9', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov r9, qword ptr [rbp]: 4c8b4c2500
mov cl, byte ptr [rbp + 8]: 8a4d08
sub rbp, 6: 4881ed06000000
shr r9, cl: 49d3e9
mov qword ptr [rbp + 8], r9: 4c894d08
pushfq: 9c
pop qword ptr [rbp]: 8f442500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 88 -   4c8b4c25008a4d084881ed0600000049d3e94c894d089c8f442500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [41]
['mov ebx, dword ptr [rbp]', 'mov ecx, dword ptr [rbp + 4]', 'sub rbp, 4', 'not ebx', 'not ecx', 'and ebx, ecx', 'mov dword ptr [rbp + 8], ebx', 'pushfq', 'pop qword ptr [rbp]', 'lea rdx, [rsp + 0x140]', 'cmp rbp, rdx', 'ja 0x7ff7a9d9cef2']

bytes: mov ebx, dword ptr [rbp]: 8b5c2500
mov ecx, dword ptr [rbp + 4]: 8b4d04
sub rbp, 4: 4881ed04000000
not ebx: f7d3
not ecx: f7d1
and ebx, ecx: 23d9
mov dword ptr [rbp + 8], ebx: 895d08
pushfq: 9c
pop qword ptr [rbp]: 8f442500
lea rdx, [rsp + 0x140]: 488d942440010000
cmp rbp, rdx: 483bea
ja 0x7ff7a9d9cef2: 0f87cec4ffff

bytecode len: 90 -   8b5c25008b4d044881ed04000000f7d3f7d123d9895d089c8f442500488d942440010000483bea0f87cec4ffff

block IDs [duplicates]: [45]
['movzx eax, byte ptr [rsi]', 'add rsi, 1', 'push rsi', 'push r11', 'mov ebx, eax', 'mov edx, ebx', 'sub ecx, ecx', 'cmp ebx, 4', 'jbe 0x7ff7a9da0190']

bytes: movzx eax, byte ptr [rsi]: 0fb606
add rsi, 1: 4881c601000000
push rsi: 56
push r11: 4153
mov ebx, eax: 8bd8
mov edx, ebx: 8bd3
sub ecx, ecx: 2bc9
cmp ebx, 4: 81fb04000000
jbe 0x7ff7a9da0190: 0f860c000000

bytecode len: 62 -   0fb6064881c6010000005641538bd88bd32bc981fb040000000f860c000000

block IDs [duplicates]: [46]
['shl ecx, 3', 'shl edx, 3', 'mov rax, rbp', 'lea rax, [rax + rdx]', 'mov qword ptr [rbp - 8], rax', 'mov qword ptr [rbp - 0x10], rsp', 'sub rsp, rcx', 'and rsp, 0xfffffffffffffff0', 'lea rsp, [rsp + rcx]', 'test ebx, ebx', 'je 0x7ff7a9da096f']

bytes: shl ecx, 3: c1e103
shl edx, 3: c1e203
mov rax, rbp: 488bc5
lea rax, [rax + rdx]: 488d0410
mov qword ptr [rbp - 8], rax: 48894425f8
mov qword ptr [rbp - 0x10], rsp: 48896425f0
sub rsp, rcx: 482be1
and rsp, 0xfffffffffffffff0: 4881e4f0ffffff
lea rsp, [rsp + rcx]: 488d240c
test ebx, ebx: 85db
je 0x7ff7a9da096f: 0f84202d0000

bytecode len: 90 -   c1e103c1e203488bc5488d041048894425f848896425f0482be14881e4f0ffffff488d240c85db0f84202d0000

block IDs [duplicates]: [47]
['mov rax, qword ptr [rbp + rbx*8]', 'cmp ebx, 1', 'jne 0x7ff7a9d9c772']

bytes: mov rax, qword ptr [rbp + rbx*8]: 488b44dd00
cmp ebx, 1: 81fb01000000
jne 0x7ff7a9d9c772: 0f85b0eeffff

bytecode len: 34 -   488b44dd0081fb010000000f85b0eeffff

block IDs [duplicates]: [48]
['cmp ebx, 2', 'jne 0x7ff7a9d9d76d']

bytes: cmp ebx, 2: 81fb02000000
jne 0x7ff7a9d9d76d: 0f857fdaffff

bytecode len: 24 -   81fb020000000f857fdaffff

block IDs [duplicates]: [49]
['mov rdx, rax', 'sub ebx, 1', 'jne 0x7ff7a9d9dc4f']

bytes: mov rdx, rax: 488bd0
sub ebx, 1: 81eb01000000
jne 0x7ff7a9d9dc4f: 0f85e0d2ffff

bytecode len: 30 -   488bd081eb010000000f85e0d2ffff

block IDs [duplicates]: [50]
['mov rcx, rax', 'sub ebx, 1', 'jne 0x7ff7a9d9dc4f']

bytes: mov rcx, rax: 488bc8
sub ebx, 1: 81eb01000000
jne 0x7ff7a9d9dc4f: 0f85e0d2ffff

bytecode len: 30 -   488bc881eb010000000f85e0d2ffff

block IDs [duplicates]: [51]
['mov rax, qword ptr [rbp]', 'sub rsp, 0x20', 'call rax']

bytes: mov rax, qword ptr [rbp]: 488b442500
sub rsp, 0x20: 4881ec20000000
call rax: ffd0

bytecode len: 28 -   488b4425004881ec20000000ffd0

block IDs [duplicates]: [52]
['jmp qword ptr [rip + 0x68df9]']

bytes: jmp qword ptr [rip + 0x68df9]: 48ff25f98d0600

bytecode len: 14 -   48ff25f98d0600

